name: Backend CI/CD (GitHub Runners)

on:
  workflow_dispatch:
    inputs:
      run_type:
        description: 'Type of run to perform'
        required: true
        default: 'full'
        type: choice
        options:
        - full
        - tests-only
        - build-only
        - code-quality-only

env:
  GO_VERSION: '1.23'
  WORKING_DIRECTORY: './backend'

jobs:
  # Code Quality Checks
  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Download dependencies
        run: go mod download

      - name: Check code formatting
        run: |
          if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
            echo "The following files are not formatted:"
            gofmt -s -l .
            exit 1
          fi

      - name: Run go vet
        run: go vet ./...

  # Unit Tests (no database required)
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Download dependencies
        run: go mod download

      - name: Run unit tests
        run: |
          echo "ðŸ§ª Running Unit Tests..."
          go test ./tests/unit/... -v

  # Build Verification
  build:
    name: Build Verification
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Download dependencies
        run: go mod download

      - name: Build application
        run: |
          echo "ðŸ”¨ Building application..."
          go build -o bin/server cmd/server/main.go
          echo "âœ… Build completed successfully"
